generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  privyId         String            @id
  email           String?
  createdAt       DateTime          @default(now())
  wallets         Wallet[]
  lastLogin       DateTime?
  streak          Int               @default(0)
  writingSessions WritingSession[]
  manaBalance     Int               @default(0)
  totalManaEarned Int               @default(0)
  farcasterFID    Int?
  ANKYBalance     Int               @default(0) // Assuming smallest unit, like wei for Ethereum
  Mana            Mana[]
  ManaTransaction ManaTransaction[]
}

model Mana {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [privyId])
  userId   String
  amount   Int
  earnedAt DateTime @default(now())
}

model ManaTransaction {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [privyId])
  userId    String
  amount    Int
  type      String // "earned" or "spent"
  createdAt DateTime @default(now())
}

model Wallet {
  id        String @id @default(uuid())
  user      User   @relation(fields: [userId], references: [privyId])
  userId    String
  address   String
  chainId   String
  chainType String
}

model WritingSession {
  id                  String   @id @default(uuid())
  user                User     @relation(fields: [userId], references: [privyId])
  userId              String
  startTime           DateTime
  endTime             DateTime
  manaEarned          Float
  multiplier          Float    @default(1.0)
  writingCID          String?
  uploadedToFarcaster Boolean  @default(false)
  farcasterHash       String?
}
